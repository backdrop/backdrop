<?php

/**
 * @file
 * Tests for codesign.module.
 */

/**
 * Tests the functionality of the Codesign module.
 */
class CodesignTestCase extends BackdropWebTestCase {
  /**
   * A user with permission to use the admin interface.
   *
   * @var object
   */
  protected $admin_user;

  function setUp() {
    parent::setUp(array('codesign', 'codesign_hash'));

    $this->admin_user = $this->backdropCreateUser(array('administer site configuration'));
  }

  function testCodesignSignature() {
    $test_data = $this->randomString(1024);
    $good_sig = 'sha256:' . hash('sha256', $test_data);
    $bad_sig = 'sha256:' . hash('sha256', $good_sig);

    $signature = codesign_sign('hash', 'default', $test_data);
    $this->assertIdentical($signature, $good_sig, 'Valid signature.');

    // Test verification of both a good and a bad signature.
    $this->assertTrue(codesign_verify('hash', $test_data, $signature), 'Verified signature.');
    $this->assertIdentical(codesign_verify('hash', $test_data, $bad_sig), FALSE, 'Invalid signature.');
    $this->assertIdentical(codesign_verify('hash', $this->randomString(1024), $signature), FALSE, 'Mismatched signature and data.');

    // Test bad input to codesign_sign();
    $this->assertNull(codesign_sign('bogus', 'default', $test_data), 'Invalid engine.');
    $this->assertNull(codesign_sign('hash', 'bad_profile', $test_data), 'Invalid profile.');
  }

  function testCodesignKeychains() {
    $hashes = hash_algos();
    $this->assertIdentical(codesign_get_public_keychain('hash'), array_combine($hashes, $hashes), 'Public keychain list.');
  }

  function testCodesignAdminInterface() {
    $this->backdropGet('admin/config/system/codesign');
    $this->assertText('You are not authorized to access this page.', 'Access to codesign admin.');

    $this->backdropGet('admin/config/system/codesign/hash');
    $this->assertText('You are not authorized to access this page.', 'Access to codesign_hash admin.');

    $this->backdropLogin($this->admin_user);

    $this->backdropGet('admin/config/system/codesign');
    $this->assertText('A dummy admin page', 'Dummy admin page is present.');
    $this->assertText('Hash Signing', 'Hash signing module.');

    $this->backdropGet('admin/config/system/codesign/hash');
    $this->assertText('Default', 'Default signing algorithm is present.');
    $this->assertText('sha256', 'Hash algorithm.');
    $this->assertLinkByHref('admin/config/system/codesign/hash/default/edit');
    $this->assertLinkByHref('admin/config/system/codesign/hash/default/delete');
  }
}
