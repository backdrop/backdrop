<?php
/**
 * @file
 * Install, update and uninstall functions for the Comment module.
 */

/**
 * Implements hook_schema_alter().
 */
function comment_schema_alter(&$schema) {
  $schema['node']['fields']['comment_close_override'] = array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
    'size' => 'tiny',
    'description' => 'Override the automatic comment closer. (0 = Do not override, 1 = Override)',
  );
}

/**
 * Implements hook_install().
 */
function comment_install() {
  if (!db_field_exists('node', 'comment_close_override')) {
    $schema = array();
    comment_schema_alter($schema);
    db_add_field('node', 'comment_close_override', $schema['node']['fields']['comment_close_override']);
  }
}

/**
 * Implements hook_uninstall().
 */
function comment_uninstall() {
  // Delete comment_body field.
  field_delete_field('comment_body');

  // Remove variables.
  state_del('node_cron_comments_scale');
  $node_types = node_type_get_types();
  foreach ($node_types as $type_name => $node_type) {
    field_attach_delete_bundle('comment', 'comment_node_' . $type_name);
    $comment_settings = array(
      'comment',
      'comment_anonymous',
      'comment_mode',
      'comment_order',
      'comment_per_page',
      'comment_form_location',
      'comment_preview',
      'comment_subject_field',
      'comment_user_picture',
      'comment_close_enabled',
      'comment_close_days'
    );
    foreach ($comment_settings as $setting) {
      if (isset($node_type->settings[$setting])) {
        unset($node_type->settings[$setting]);
      }
    }
    node_type_save($node_type);
  }
  
  // Remove comment closer override.
  if (db_field_exists('node', 'comment_close_override')) {
    db_drop_field('node', 'comment_close_override');
  }
}

/**
 * Implements hook_enable().
 */
function comment_enable() {
  // Insert records into the node_comment_statistics for nodes that are missing.
  $query = db_select('node', 'n');
  $query->leftJoin('node_comment_statistics', 'ncs', 'ncs.nid = n.nid');
  $query->addField('n', 'created', 'last_comment_timestamp');
  $query->addField('n', 'uid', 'last_comment_uid');
  $query->addField('n', 'nid');
  $query->addExpression('0', 'comment_count');
  $query->addExpression('NULL', 'last_comment_name');
  $query->isNull('ncs.comment_count');

  db_insert('node_comment_statistics')
    ->from($query)
    ->execute();
}

/**
 * Implements hook_modules_enabled().
 *
 * Creates comment body fields for node types existing before the Comment module
 * is enabled. We use hook_modules_enabled() rather than hook_enable() so we can
 * react to node types of existing modules, and those of modules being enabled
 * both before and after the Comment module in the loop of module_enable().
 *
 * There is a separate comment bundle for each node type to allow for
 * per-node-type customization of comment fields. Each one of these bundles
 * needs a comment body field instance. A comment bundle is needed even for
 * node types whose comments are disabled by default, because individual nodes
 * may override that default.
 *
 * @see comment_node_type_insert()
 */
function comment_modules_enabled($modules) {
  // Only react if the Comment module is one of the modules being enabled.
  // hook_node_type_insert() is used to create body fields while the comment
  // module is enabled.
  if (in_array('comment', $modules)) {
    // Ensure that the list of node types reflects newly enabled modules.
    node_type_cache_reset();

    // Create comment body fields for each node type, if needed.
    foreach (node_type_get_types() as $type => $info) {
      _comment_body_field_create($info);
    }
  }
}

/**
 * Implements hook_schema().
 */
function comment_schema() {
  $schema['comment'] = array(
    'description' => 'Stores comments and associated data.',
    'fields' => array(
      'cid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique comment ID.',
      ),
      'pid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {comment}.cid to which this comment is a reply. If set to 0, this comment is not a reply to an existing comment.',
      ),
      'nid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {node}.nid to which this comment is a reply.',
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {users}.uid who authored the comment. If set to 0, this comment was created by an anonymous user.',
      ),
      'subject' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The comment title.',
      ),
      'hostname' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => "The author's host name.",
      ),
      'created' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The time that the comment was created, as a Unix timestamp.',
      ),
      'changed' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The time that the comment was last edited, as a Unix timestamp.',
      ),
      'status' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
        'size' => 'tiny',
        'description' => 'The published status of a comment. (0 = Not Published, 1 = Published)',
      ),
      'thread' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => "The alphadecimal representation of the comment's place in a thread, consisting of a base 36 string prefixed by an integer indicating its length.",
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 60,
        'not null' => FALSE,
        'description' => "The comment author's name. Uses {users}.name if the user is logged in, otherwise uses the value typed into the comment form.",
      ),
      'mail' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => FALSE,
        'description' => "The comment author's e-mail address from the comment form, if user is anonymous, and the 'Anonymous users may/must leave their contact information' setting is turned on.",
      ),
      'homepage' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => "The comment author's home page address from the comment form, if user is anonymous, and the 'Anonymous users may/must leave their contact information' setting is turned on.",
      ),
      'langcode' => array(
        'description' => 'The language code of this comment.',
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'indexes' => array(
      'comment_status_pid' => array('pid', 'status'),
      'comment_num_new' => array('nid', 'status', 'created', 'cid', 'thread'),
      'comment_uid' => array('uid'),
      'comment_nid_langcode' => array('nid', 'langcode'),
      'comment_created' => array('created'),
    ),
    'primary key' => array('cid'),
    'foreign keys' => array(
      'comment_node' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
      'comment_author' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );

  $schema['node_comment_statistics'] = array(
    'description' => 'Maintains statistics of node and comments posts to show "new" and "updated" flags.',
    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {node}.nid for which the statistics are compiled.',
      ),
      'cid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {comment}.cid of the last comment.',
      ),
      'last_comment_timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The Unix timestamp of the last comment that was posted within this node, from {comment}.changed.',
      ),
      'last_comment_name' => array(
        'type' => 'varchar',
        'length' => 60,
        'not null' => FALSE,
        'description' => 'The name of the latest author to post a comment on this node, from {comment}.name.',
      ),
      'last_comment_uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The user ID of the latest author to post a comment on this node, from {comment}.uid.',
      ),
      'comment_count' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The total number of comments on this node.',
      ),
    ),
    'primary key' => array('nid'),
    'indexes' => array(
      'node_comment_timestamp' => array('last_comment_timestamp'),
      'comment_count' => array('comment_count'),
      'last_comment_uid' => array('last_comment_uid'),
    ),
    'foreign keys' => array(
      'statistics_node' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
      'last_comment_author' => array(
        'table' => 'users',
        'columns' => array(
          'last_comment_uid' => 'uid',
        ),
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_update_dependencies().
 */
function comment_update_dependencies() {
  // comment_update_1001() updates comment variables to save into the node
  // type config files, which are created in node_update_1005().
  $dependencies['comment'][1001] = array(
    'node' => 1005,
  );
  return $dependencies;
}

/**
 * @addtogroup updates-7.x-to-1.x
 * @{
 */

/**
 * Renames {comment}.language to {comment}.langcode.
 */
function comment_update_1000() {
  db_drop_index('comment', 'comment_nid_langcode');
  $langcode_spec = array(
    'type' => 'varchar',
    'length' => 12,
    'not null' => TRUE,
    'default' => '',
    'description' => "Language code, e.g. 'de' or 'en-US'.",
  );
  db_change_field('comment', 'language', 'langcode', $langcode_spec);
  db_add_index('comment', 'comment_nid_langcode', array('nid', 'langcode'));
}

/**
 * Move comment content type settings into configuration files.
 */
function comment_update_1001() {
  // Ensure module-provided code is loaded.
  backdrop_load('module', 'node');
  backdrop_load('module', 'entity');

  $node_types = node_type_get_types();
  foreach ($node_types as $node_type) {
    // Move the comment variables into each node type's config.
    $settings = array(
      'comment_default' => update_variable_get('comment_' . $node_type->type, COMMENT_NODE_OPEN),
      'comment_per_page' => update_variable_get('comment_default_per_page_' . $node_type->type, 50),
      'comment_mode' => update_variable_get('comment_default_mode_' . $node_type->type, COMMENT_MODE_THREADED),
      'comment_anonymous' => update_variable_get('comment_anonymous_' . $node_type->type, COMMENT_ANONYMOUS_MAYNOT_CONTACT),
      'comment_subject_field' => update_variable_get('comment_subject_field_' . $node_type->type, COMMENT_ANONYMOUS_MAYNOT_CONTACT),
      'comment_user_picture' => update_variable_get('comment_user_picture_' . $node_type->type, 1),
      'comment_form_location' => update_variable_get('comment_form_location_' . $node_type->type, COMMENT_FORM_BELOW),
      'comment_preview' => update_variable_get('comment_preview_' . $node_type->type, BACKDROP_OPTIONAL),
    );
    $node_type->settings = array_merge($node_type->settings, $settings);
    node_type_save($node_type);

    // Delete the migrated variables.
    update_variable_del('comment_' . $node_type->type);
    update_variable_del('comment_default_per_page_' . $node_type->type);
    update_variable_del('comment_default_mode_' . $node_type->type);
    update_variable_del('comment_anonymous_' . $node_type->type);
    update_variable_del('comment_subject_field_' . $node_type->type);
    update_variable_del('comment_user_picture_' . $node_type->type);
    update_variable_del('comment_form_location_' . $node_type->type);
    update_variable_del('comment_preview_' . $node_type->type);
  }
}

/**
 * Move comment variables to configuration files.
 */
function comment_update_1002() {
  // These variables are environment-specific, so they use state instead of
  // config files.
  state_set('node_cron_comments_scale', update_variable_get('node_cron_comments_scale', 1.0));
  update_variable_del('node_cron_comments_scale');

  state_set('comment_maintain_node_statistics', update_variable_get('comment_maintain_node_statistics', TRUE));
  update_variable_del('comment_maintain_node_statistics');
}

/**
 * Node type comment settings should be closed instead of hidden by default.
 */
function comment_update_1003() {
  foreach (config_get_names_with_prefix('node.type.') as $config_name) {
    $config = config($config_name);
    $comment_default = $config->get('settings.comment_default');
    if ($comment_default == COMMENT_NODE_HIDDEN) {
      $config->set('settings.comment_default', COMMENT_NODE_CLOSED);
      $config->save();
    }
  }
}

/**
 * Add an Override column for automatic comment closing for individual nodes.
 */
function comment_update_1004() {
  if (db_field_exists('node', 'comment_close_override')) {
    return;
  }

  $comment_close_override_column = array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
    'size' => 'tiny',
    'description' => 'Override the automatic comment closer. (0 = Do not override, 1 = Override)',
  );

  db_add_field('node', 'comment_close_override', $comment_close_override_column);
}

/**
 * Convert comment admin overview to a View.
 */
function comment_update_1005() {
  $data = array(
    'name' => 'manage_comments',
    'description' => 'Provides a list of all comments on the site. Allows actions such as finding all comments by a specific user and approving, unpublishing or deleting comments.',
    'module' => 'comment',
    'storage' => 4,
    'tag' => 'default',
    'disabled' => FALSE,
    'base_table' => 'comment',
    'human_name' => 'Manage comments',
    'core' => '1.0',
    'display' => array(
      'default' => array(
        'display_title' => 'Master',
        'display_plugin' => 'default',
        'display_options' => array(
          'query' => array(
            'type' => 'views_query',
            'options' => array(
            ),
          ),
          'access' => array(
            'type' => 'perm',
            'perm' => 'administer comments',
          ),
          'cache' => array(
            'type' => 'none',
          ),
        'exposed_form' => array(
          'type' => 'basic',
          'options' => array(
            'submit_button' => 'Filter',
            'reset_button' => 0,
            'reset_button_label' => 'Reset',
            'exposed_sorts_label' => 'Sort by',
            'expose_sort_order' => 1,
            'sort_asc_label' => 'Asc',
            'sort_desc_label' => 'Desc',
            'autosubmit' => 0,
            'autosubmit_hide' => 1,
          ),
        ),
        'pager' => array(
          'type' => 'full',
          'options' => array(
            'items_per_page' => '50',
            'offset' => '0',
            'id' => '0',
            'total_pages' => '',
            'quantity' => '9',
            'tags' => array(
              'first' => '« first',
              'previous' => '‹ previous',
              'next' => 'next ›',
              'last' => 'last »',
            ),
            'expose' => array(
              'items_per_page' => 0,
              'items_per_page_label' => 'Items per page',
              'items_per_page_options' => '5, 10, 20, 40, 60',
              'items_per_page_options_all' => 0,
              'items_per_page_options_all_label' => '- All -',
              'offset' => 0,
              'offset_label' => 'Offset',
            ),
          ),
        ),
        'style_plugin' => 'table',
        'row_plugin' => 'fields',
        'relationships' => array(
          'nid' => array(
            'id' => 'nid',
            'table' => 'comment',
            'field' => 'nid',
            'required' => 1,
          ),
        ),
        'fields' => array(
          'bulk_form' => array(
            'id' => 'bulk_form',
            'table' => 'comment',
            'field' => 'bulk_form',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => '',
            'exclude' => 0,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => FALSE,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'include_exclude' => 'include',
            'selected_actions' => array(
              'comment_unpublish_action' => 'comment_unpublish_action',
              'comment_delete_action' => 'comment_delete_action',
            ),
          ),
          'subject' => array(
            'id' => 'subject',
            'table' => 'comment',
            'field' => 'subject',
            'alter' => array(
              'alter_text' => 0,
              'make_link' => 0,
              'absolute' => 0,
              'trim' => 0,
              'word_boundary' => 0,
              'ellipsis' => 0,
              'strip_tags' => 0,
              'html' => 0,
            ),
            'hide_empty' => 0,
            'empty_zero' => 0,
            'link_to_comment' => 1,
          ),
          'name' => array(
            'id' => 'name',
            'table' => 'comment',
            'field' => 'name',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Author',
            'exclude' => 0,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'link_to_user' => 1,
          ),
          'comment_body' => array(
            'id' => 'comment_body',
            'table' => 'field_data_comment_body',
            'field' => 'comment_body',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Comment',
            'exclude' => 1,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'click_sort_column' => 'value',
            'type' => 'text_default',
            'settings' => array(
            ),
            'group_column' => 'value',
            'group_columns' => array(
            ),
            'group_rows' => TRUE,
            'delta_limit' => 'all',
            'delta_offset' => 0,
            'delta_reversed' => FALSE,
            'delta_first_last' => FALSE,
            'multi_type' => 'separator',
            'separator' => ', ',
            'field_api_classes' => 0,
          ),
          'title' => array(
            'id' => 'title',
            'table' => 'node',
            'field' => 'title',
            'relationship' => 'nid',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Posted in',
            'exclude' => 0,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'link_to_node' => 1,
          ),
          'changed' => array(
            'id' => 'changed',
            'table' => 'comment',
            'field' => 'changed',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Updated',
            'exclude' => 0,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'date_format' => 'short',
            'custom_date_format' => '',
            'timezone' => '',
          ),
          'edit_comment' => array(
            'id' => 'edit_comment',
            'table' => 'comment',
            'field' => 'edit_comment',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Edit link',
            'exclude' => 1,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'text' => '',
            'link_to_node' => 0,
            'destination' => 0,
          ),
          'approve_comment' => array(
            'id' => 'approve_comment',
            'table' => 'comment',
            'field' => 'approve_comment',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Approve link',
            'exclude' => 1,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'text' => '',
            'link_to_node' => 0,
          ),
          'delete_comment' => array(
            'id' => 'delete_comment',
            'table' => 'comment',
            'field' => 'delete_comment',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Delete link',
            'exclude' => 1,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'text' => '',
            'link_to_node' => 0,
          ),
          'dropbutton' => array(
            'id' => 'dropbutton',
            'table' => 'views',
            'field' => 'dropbutton',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Operations',
            'exclude' => 0,
            'alter' => array(
              'alter_text' => FALSE,
              'text' => '',
              'make_link' => FALSE,
              'path' => '',
              'absolute' => FALSE,
              'external' => FALSE,
              'replace_spaces' => FALSE,
              'path_case' => 'none',
              'trim_whitespace' => FALSE,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => FALSE,
              'max_length' => '',
              'word_boundary' => TRUE,
              'ellipsis' => TRUE,
              'more_link' => FALSE,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => FALSE,
              'trim' => FALSE,
              'preserve_tags' => '',
              'html' => FALSE,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 0,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'fields' => array(
              'edit_comment' => 'edit_comment',
              'approve_comment' => 'approve_comment',
              'delete_comment' => 'delete_comment',
              'bulk_form' => 0,
              'subject' => 0,
              'name' => 0,
              'title' => 0,
              'changed' => 0,
            ),
            'destination' => 1,
          ),
        ),
        'filters' => array(
          'combine' => array(
            'id' => 'combine',
            'table' => 'views',
            'field' => 'combine',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'operator' => 'word',
            'value' => '',
            'group' => 1,
            'exposed' => TRUE,
            'expose' => array(
              'operator_id' => 'combine_op',
              'label' => 'Comment contains',
              'description' => '',
              'use_operator' => 0,
              'operator' => 'combine_op',
              'identifier' => 'combine',
              'required' => 0,
              'remember' => 0,
              'multiple' => FALSE,
              'remember_roles' => array(
                'authenticated' => 'authenticated',
                'anonymous' => 0,
                'administrator' => 0,
              ),
            ),
            'is_grouped' => FALSE,
            'group_info' => array(
              'label' => '',
              'description' => '',
              'identifier' => '',
              'optional' => TRUE,
              'widget' => 'select',
              'multiple' => FALSE,
              'remember' => 0,
              'default_group' => 'All',
              'default_group_multiple' => array(
              ),
              'group_items' => array(
              ),
            ),
            'fields' => array(
              'subject' => 'subject',
              'comment_body' => 'comment_body',
            ),
          ),
          'status' => array(
            'id' => 'status',
            'table' => 'comment',
            'field' => 'status',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'operator' => '=',
            'value' => '1',
            'group' => 1,
            'exposed' => FALSE,
            'expose' => array(
              'operator_id' => '',
              'label' => 'Approved',
              'description' => '',
              'use_operator' => FALSE,
              'operator' => 'status_op',
              'identifier' => 'status',
              'required' => 0,
              'remember' => 0,
              'multiple' => FALSE,
              'remember_roles' => array(
                'authenticated' => 'authenticated',
                'anonymous' => 0,
                'administrator' => 0,
              ),
            ),
            'is_grouped' => FALSE,
            'group_info' => array(
              'label' => '',
              'description' => '',
              'identifier' => '',
              'optional' => TRUE,
              'widget' => 'select',
              'multiple' => FALSE,
              'remember' => 0,
              'default_group' => 'All',
              'default_group_multiple' => array(
              ),
              'group_items' => array(
              ),
            ),
          ),
          'name' => array(
            'id' => 'name',
            'table' => 'comment',
            'field' => 'name',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'operator' => '=',
            'value' => '',
            'group' => '1',
            'exposed' => TRUE,
            'expose' => array(
              'use_operator' => FALSE,
              'operator' => 'name_op',
              'identifier' => 'name',
              'label' => 'Author',
              'description' => NULL,
              'remember' => FALSE,
              'multiple' => FALSE,
              'required' => FALSE,
            ),
            'is_grouped' => FALSE,
            'group_info' => array(
              'label' => '',
              'description' => '',
              'identifier' => '',
              'optional' => TRUE,
              'widget' => 'select',
              'multiple' => FALSE,
              'remember' => 0,
              'default_group' => 'All',
              'default_group_multiple' => array(
              ),
              'group_items' => array(
              ),
            ),
          ),
        ),
        'sorts' => array(
          'changed' => array(
            'id' => 'changed',
            'table' => 'comment',
            'field' => 'changed',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'order' => 'DESC',
            'exposed' => FALSE,
            'expose' => array(
              'label' => '',
            ),
            'granularity' => 'second',
          ),
        ),
        'title' => 'Content',
        'filter_groups' => array(
          'operator' => 'AND',
          'groups' => array(
            1 => 'AND',
          ),
        ),
        'style_options' => array(
          'grouping' => array(
          ),
          'row_class' => '',
          'default_row_class' => 1,
          'row_class_special' => 1,
          'override' => 1,
          'sticky' => 0,
          'caption' => '',
          'summary' => '',
          'columns' => array(
            'bulk_form' => 'bulk_form',
            'subject' => 'subject',
            'name' => 'name',
            'title' => 'title',
            'status' => 'status',
            'changed' => 'changed',
            'edit_comment' => 'edit_comment',
            'approve_comment' => 'approve_comment',
            'delete_comment' => 'delete_comment',
            'dropbutton' => 'dropbutton',
          ),
          'info' => array(
            'bulk_form' => array(
              'align' => '',
              'separator' => '',
              'empty_column' => 0,
            ),
            'subject' => array(
              'sortable' => 1,
              'default_sort_order' => 'asc',
              'align' => '',
              'separator' => '',
              'empty_column' => 0,
            ),
            'name' => array(
              'sortable' => 1,
              'default_sort_order' => 'asc',
              'align' => '',
              'separator' => '',
              'empty_column' => 0,
            ),
            'title' => array(
              'sortable' => 1,
              'default_sort_order' => 'asc',
              'align' => '',
              'separator' => '',
              'empty_column' => 0,
            ),
            'status' => array(
              'sortable' => 1,
              'default_sort_order' => 'asc',
              'align' => '',
              'separator' => '',
              'empty_column' => 0,
            ),
            'changed' => array(
              'sortable' => 1,
              'default_sort_order' => 'desc',
              'align' => '',
              'separator' => '',
              'empty_column' => 0,
            ),
            'edit_comment' => array(
              'align' => '',
              'separator' => '',
              'empty_column' => 0,
            ),
            'approve_comment' => array(
              'align' => '',
              'separator' => '',
              'empty_column' => 0,
            ),
            'delete_comment' => array(
              'align' => '',
              'separator' => '',
              'empty_column' => 0,
            ),
            'dropbutton' => array(
              'align' => '',
              'separator' => '',
              'empty_column' => 0,
            ),
          ),
          'default' => 'changed',
          'empty_table' => 0,
        ),
        'empty' => array(
          'area_text_custom' => array(
            'id' => 'area_text_custom',
            'table' => 'views',
            'field' => 'area_text_custom',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => '',
            'empty' => TRUE,
            'content' => 'No comments found.',
            'tokenize' => 0,
          ),
        ),
        'header' => array(
        ),
      ),
    ),
    'page' => array(
      'display_title' => 'Overview Page',
      'display_plugin' => 'page',
      'display_options' => array(
        'query' => array(
          'type' => 'views_query',
          'options' => array(
          ),
        ),
        'path' => 'admin/content/comment/new',
        'menu' => array(
          'type' => 'default tab',
          'title' => 'Published comments',
          'description' => '',
          'name' => 'management',
          'weight' => '0',
          'context' => 0,
          'context_only_inline' => 0,
        ),
        'display_description' => '',
        'tab_options' => array(
          'type' => 'tab',
          'title' => 'Manage comments',
          'description' => '',
          'name' => 'management',
          'weight' => '0',
        ),
      ),
    ),
    'page_1' => array(
      'display_title' => 'Approval Page',
      'display_plugin' => 'page',
      'display_options' => array(
        'query' => array(
          'type' => 'views_query',
          'options' => array(
          ),
        ),
        'path' => 'admin/content/comment/approval',
        'display_description' => '',
        'menu' => array(
          'type' => 'tab',
          'title' => 'Unapproved comments',
          'description' => '',
          'name' => 'management',
          'weight' => '1',
          'context' => 0,
          'context_only_inline' => 0,
        ),
        'filters' => array(
          'combine' => array(
            'id' => 'combine',
            'table' => 'views',
            'field' => 'combine',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'operator' => 'word',
            'value' => '',
            'group' => 1,
            'exposed' => TRUE,
            'expose' => array(
              'operator_id' => 'combine_op',
              'label' => 'Comment contains',
              'description' => '',
              'use_operator' => 0,
              'operator' => 'combine_op',
              'identifier' => 'combine',
              'required' => 0,
              'remember' => 0,
              'multiple' => FALSE,
              'remember_roles' => array(
                'authenticated' => 'authenticated',
                'anonymous' => 0,
                'administrator' => 0,
              ),
            ),
            'is_grouped' => FALSE,
            'group_info' => array(
              'label' => '',
              'description' => '',
              'identifier' => '',
              'optional' => TRUE,
              'widget' => 'select',
              'multiple' => FALSE,
              'remember' => 0,
              'default_group' => 'All',
              'default_group_multiple' => array(
              ),
              'group_items' => array(
              ),
            ),
            'fields' => array(
              'subject' => 'subject',
              'comment_body' => 'comment_body',
            ),
          ),
          'status' => array(
            'id' => 'status',
            'table' => 'comment',
            'field' => 'status',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'operator' => '=',
            'value' => '0',
            'group' => 1,
            'exposed' => FALSE,
            'expose' => array(
              'operator_id' => '',
              'label' => 'Approved',
              'description' => '',
              'use_operator' => FALSE,
              'operator' => 'status_op',
              'identifier' => 'status',
              'required' => 0,
              'remember' => 0,
              'multiple' => FALSE,
              'remember_roles' => array(
                'authenticated' => 'authenticated',
                'anonymous' => 0,
                'administrator' => 0,
              ),
            ),
            'is_grouped' => FALSE,
            'group_info' => array(
              'label' => '',
              'description' => '',
              'identifier' => '',
              'optional' => TRUE,
              'widget' => 'select',
              'multiple' => FALSE,
              'remember' => 0,
              'default_group' => 'All',
              'default_group_multiple' => array(
              ),
              'group_items' => array(
              ),
            ),
          ),
          'name' => array(
            'id' => 'name',
            'table' => 'comment',
            'field' => 'name',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'operator' => '=',
            'value' => '',
            'group' => '1',
            'exposed' => TRUE,
            'expose' => array(
              'use_operator' => FALSE,
              'operator' => 'name_op',
              'identifier' => 'name',
              'label' => 'Author',
              'description' => NULL,
              'remember' => FALSE,
              'multiple' => FALSE,
              'required' => FALSE,
            ),
            'is_grouped' => FALSE,
            'group_info' => array(
              'label' => '',
              'description' => '',
              'identifier' => '',
              'optional' => TRUE,
              'widget' => 'select',
              'multiple' => FALSE,
              'remember' => 0,
              'default_group' => 'All',
              'default_group_multiple' => array(
              ),
              'group_items' => array(
              ),
            ),
          ),
        ),
        'defaults' => array(
          'filters' => FALSE,
          'filter_groups' => FALSE,
          'title' => TRUE,
          'fields' => FALSE,
          'header' => FALSE,
        ),
        'filter_groups' => array(
          'operator' => 'AND',
          'groups' => array(
            1 => 'AND',
          ),
        ),
        'fields' => array(
          'bulk_form' => array(
            'id' => 'bulk_form',
            'table' => 'comment',
            'field' => 'bulk_form',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => '',
            'exclude' => 0,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => FALSE,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'include_exclude' => 'include',
            'selected_actions' => array(
              'comment_publish_action' => 'comment_publish_action',
              'comment_delete_action' => 'comment_delete_action',
            ),
          ),
          'subject' => array(
            'id' => 'subject',
            'table' => 'comment',
            'field' => 'subject',
            'alter' => array(
              'alter_text' => 0,
              'make_link' => 0,
              'absolute' => 0,
              'trim' => 0,
              'word_boundary' => 0,
              'ellipsis' => 0,
              'strip_tags' => 0,
              'html' => 0,
            ),
            'hide_empty' => 0,
            'empty_zero' => 0,
            'link_to_comment' => 1,
          ),
          'name' => array(
            'id' => 'name',
            'table' => 'comment',
            'field' => 'name',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Author',
            'exclude' => 0,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'link_to_user' => 1,
          ),
          'comment_body' => array(
            'id' => 'comment_body',
            'table' => 'field_data_comment_body',
            'field' => 'comment_body',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Comment',
            'exclude' => 1,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'click_sort_column' => 'value',
            'type' => 'text_default',
            'settings' => array(
            ),
            'group_column' => 'value',
            'group_columns' => array(
            ),
            'group_rows' => TRUE,
            'delta_limit' => 'all',
            'delta_offset' => 0,
            'delta_reversed' => FALSE,
            'delta_first_last' => FALSE,
            'multi_type' => 'separator',
            'separator' => ', ',
            'field_api_classes' => 0,
          ),
          'title' => array(
            'id' => 'title',
            'table' => 'node',
            'field' => 'title',
            'relationship' => 'nid',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Posted in',
            'exclude' => 0,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'link_to_node' => 1,
          ),
          'changed' => array(
            'id' => 'changed',
            'table' => 'comment',
            'field' => 'changed',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Updated',
            'exclude' => 0,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'date_format' => 'short',
            'custom_date_format' => '',
            'timezone' => '',
          ),
          'edit_comment' => array(
            'id' => 'edit_comment',
            'table' => 'comment',
            'field' => 'edit_comment',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Edit link',
            'exclude' => 1,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'text' => '',
            'link_to_node' => 0,
            'destination' => 0,
          ),
          'approve_comment' => array(
            'id' => 'approve_comment',
            'table' => 'comment',
            'field' => 'approve_comment',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Approve link',
            'exclude' => 1,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'text' => '',
            'link_to_node' => 0,
          ),
          'delete_comment' => array(
            'id' => 'delete_comment',
            'table' => 'comment',
            'field' => 'delete_comment',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Delete link',
            'exclude' => 1,
            'alter' => array(
              'alter_text' => 0,
              'text' => '',
              'make_link' => 0,
              'path' => '',
              'absolute' => 0,
              'external' => 0,
              'replace_spaces' => 0,
              'path_case' => 'none',
              'trim_whitespace' => 0,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => 0,
              'max_length' => '',
              'word_boundary' => 1,
              'ellipsis' => 1,
              'more_link' => 0,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => 0,
              'trim' => 0,
              'preserve_tags' => '',
              'html' => 0,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 1,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'text' => '',
            'link_to_node' => 0,
          ),
          'dropbutton' => array(
            'id' => 'dropbutton',
            'table' => 'views',
            'field' => 'dropbutton',
            'relationship' => 'none',
            'group_type' => 'group',
            'ui_name' => '',
            'label' => 'Operations',
            'exclude' => 0,
            'alter' => array(
              'alter_text' => FALSE,
              'text' => '',
              'make_link' => FALSE,
              'path' => '',
              'absolute' => FALSE,
              'external' => FALSE,
              'replace_spaces' => FALSE,
              'path_case' => 'none',
              'trim_whitespace' => FALSE,
              'alt' => '',
              'rel' => '',
              'link_class' => '',
              'prefix' => '',
              'suffix' => '',
              'target' => '',
              'nl2br' => FALSE,
              'max_length' => '',
              'word_boundary' => TRUE,
              'ellipsis' => TRUE,
              'more_link' => FALSE,
              'more_link_text' => '',
              'more_link_path' => '',
              'strip_tags' => FALSE,
              'trim' => FALSE,
              'preserve_tags' => '',
              'html' => FALSE,
            ),
            'element_type' => '',
            'element_class' => '',
            'element_label_type' => '',
            'element_label_class' => '',
            'element_label_colon' => 1,
            'element_wrapper_type' => '',
            'element_wrapper_class' => '',
            'element_default_classes' => 0,
            'empty' => '',
            'hide_empty' => 0,
            'empty_zero' => 0,
            'hide_alter_empty' => 1,
            'fields' => array(
              'edit_comment' => 'edit_comment',
              'approve_comment' => 'approve_comment',
              'delete_comment' => 'delete_comment',
              'bulk_form' => 0,
              'subject' => 0,
              'name' => 0,
              'title' => 0,
              'changed' => 0,
            ),
            'destination' => 1,
          ),
        ),
        'header' => array(
          'result' => array(
              'id' => 'result',
              'table' => 'views',
              'field' => 'result',
              'relationship' => 'none',
              'group_type' => 'group',
              'ui_name' => '',
              'label' => '',
              'empty' => 0,
              'content' => 'There are <em>@total unapproved comments</em>.',
            ),
          ),
        ),
      ),
    ),
  );
  $config = config('views.view.manage_comments');
  if ($config->isNew()) {
    $config->setData($data);
    $config->save();
  }
}

/**
 * @} End of "addtogroup updates-7.x-to-1.x"
 * The next series of updates should start at 2000.
 */
