<?php

/**
 * @file
 * Install, update and uninstall functions for the taxonomy module.
 */

/**
 * Implements hook_uninstall().
 */
function taxonomy_uninstall() {
  // Remove taxonomy_term bundles.
  $configs = config_get_names_with_prefix('taxonomy.vocabulary.');
  foreach ($configs as $config_name) {
    $vocabulary_name = str_replace('taxonomy.vocabulary.', '', $config_name);
    field_attach_delete_bundle('taxonomy_term', $vocabulary_name);
  }
}

/**
 * Implements hook_schema().
 */
function taxonomy_schema() {
  $schema['taxonomy_term_data'] = array(
    'description' => 'Stores term information.',
    'fields' => array(
      'tid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary Key: Unique term ID.',
      ),
      'vocabulary' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The vocabulary machine name to which this term is assigned.',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The term name.',
        'translatable' => TRUE,
      ),
      'description' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'description' => 'A description of the term.',
        'translatable' => TRUE,
      ),
      'format' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'The {filter_format}.format of the description.',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The weight of this term in relation to other terms.',
      ),
    ),
    'primary key' => array('tid'),
    'indexes' => array(
      'taxonomy_tree' => array('vocabulary', 'weight', 'name'),
      'vocabulary_name' => array('vocabulary', 'name'),
      'name' => array('name'),
    ),
  );

  $schema['taxonomy_term_hierarchy'] = array(
    'description' => 'Stores the hierarchical relationship between terms.',
    'fields' => array(
      'tid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Primary Key: The {taxonomy_term_data}.tid of the term.',
      ),
      'parent' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => "Primary Key: The {taxonomy_term_data}.tid of the term's parent. 0 indicates no parent.",
      ),
    ),
    'indexes' => array(
      'parent' => array('parent'),
    ),
    'foreign keys' => array(
      'taxonomy_term_data' => array(
        'table' => 'taxonomy_term_data',
        'columns' => array('tid' => 'tid'),
      ),
    ),
    'primary key' => array('tid', 'parent'),
  );

  $schema['taxonomy_vocabulary'] = array(
    'description' => 'Stores vocabulary information.',
    'fields' => array(
      'vid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary Key: Unique vocabulary ID.',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Name of the vocabulary.',
        'translatable' => TRUE,
      ),
      'machine_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The vocabulary machine name.',
      ),
      'description' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'description' => 'Description of the vocabulary.',
        'translatable' => TRUE,
      ),
      'hierarchy' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The type of hierarchy allowed within the vocabulary. (0 = disabled, 1 = single, 2 = multiple)',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The weight of this vocabulary in relation to other vocabularies.',
      ),
    ),
    'primary key' => array('vid'),
    'indexes' => array(
      'list' => array('weight', 'name'),
    ),
    'unique keys' => array(
      'machine_name' => array('machine_name'),
    ),
  );

  $schema['taxonomy_index'] = array(
    'description' => 'Maintains denormalized information about node/term relationships.',
    'fields' => array(
      'nid' => array(
        'description' => 'The {node}.nid this record tracks.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'tid' => array(
         'description' => 'The term ID.',
         'type' => 'int',
         'unsigned' => TRUE,
         'not null' => TRUE,
         'default' => 0,
      ),
      'sticky' => array(
        'description' => 'Boolean indicating whether the node is sticky.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
        'size' => 'tiny',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the node was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default'=> 0,
      ),
    ),
    'indexes' => array(
      'term_node' => array('tid', 'sticky', 'created'),
      'nid' => array('nid'),
    ),
    'foreign keys' => array(
      'tracked_node' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
      'term' => array(
        'table' => 'taxonomy_term_data',
        'columns' => array('tid' => 'tid'),
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_field_schema().
 */
function taxonomy_field_schema($field) {
  return array(
    'columns' => array(
      'tid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
    ),
    'indexes' => array(
      'tid' => array('tid'),
    ),
    'foreign keys' => array(
      'tid' => array(
        'table' => 'taxonomy_term_data',
        'columns' => array('tid' => 'tid'),
      ),
    ),
  );
}

/**
 * Implements hook_update_dependencies().
 */
function taxonomy_update_dependencies() {
  // Do not allow user module to convert user roles to configuration until after
  // we have renamed our permissions in taxonomy_update_1001().
  $dependencies['user'][1007] = array(
    'taxonomy' => 1001,
  );

  return $dependencies;
}

/**
 * @addtogroup updates-7.x-to-1.x
 * @{
 */

/**
 * Remove the {taxonomy_vocabulary}.module field.
 */
function taxonomy_update_1000() {
  // Update removed. Previously dropped the {taxonomy_vocabulary}.module field,
  // but taxonomy_update_1002() drops the entire table.
}

/**
 * Convert taxonomy vocabularies to configuration.
 */
function taxonomy_update_1001() {
  // Create the new machine name column in the term data table.
  if (!db_field_exists('taxonomy_term_data', 'vocabulary')) {
    db_add_field('taxonomy_term_data', 'vocabulary', array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
      'default' => '',
      'description' => 'The vocabulary machine name to which this term is assigned.',
    ));
  }

  // Convert the vocabularies.
  if (db_table_exists('taxonomy_vocabulary')) {
    $result = db_query("SELECT * FROM {taxonomy_vocabulary}");
    foreach ($result as $row) {
      $vocabulary_data = (array) $row;
      $vid = $vocabulary_data['vid'];
      $machine_name = $vocabulary_data['machine_name'];
      unset($vocabulary_data['vid']);

      // Save the vocabulary as config.
      $config = config('taxonomy.vocabulary.'. $machine_name);
      $config->setData($vocabulary_data);
      $config->save();

      // Update the term data table.
      db_update('taxonomy_term_data')
        ->fields(array(
          'vocabulary' => $machine_name
        ))
        ->condition('vid' , $vid)
        ->execute();

      // Update permission names to use machine name.
      db_update('role_permission')
        ->fields(array(
          'permission' => 'edit terms in ' . $machine_name
        ))
        ->condition('permission', 'edit terms in ' . $vid)
        ->execute();
      db_update('role_permission')
        ->fields(array(
          'permission' => 'delete terms in ' . $machine_name
        ))
        ->condition('permission', 'delete terms in ' . $vid)
        ->execute();
    }
  }
}

/**
 * Drop the old taxonomy vocabulary table.
 */
function taxonomy_update_1002() {
  if (db_table_exists('taxonomy_vocabulary')) {
    db_drop_table('taxonomy_vocabulary');
  }
  if (db_field_exists('taxonomy_term_data', 'vid')) {
    db_drop_field('taxonomy_term_data', 'vid');
  }

  // Drop the old indexes and create new ones.
  if (db_index_exists('taxonomy_term_data', 'taxonomy_tree')) {
    db_drop_index('taxonomy_term_data', 'taxonomy_tree');
    db_add_index('taxonomy_term_data', 'taxonomy_tree', array('vocabulary', 'weight', 'name'));
  }
  if (db_index_exists('taxonomy_term_data', 'vid_name')) {
    db_drop_index('taxonomy_term_data', 'vid_name');
  }
  if (!db_index_exists('taxonomy_term_data', 'vocabulary_name')) {
    db_add_index('taxonomy_term_data', 'vocabulary_name', array('vocabulary', 'name'));
  }
}

/**
 * Create the taxonomy.settings config file.
 */
function taxonomy_update_1003() {
  $config = config('taxonomy.settings');
  $config->set('maintain_index_table', TRUE);
  $config->save();
}

/**
 * Convert taxonomy terms per page to config.
 */
function taxonomy_update_1004() {
  $config = config('taxonomy.settings');
  $config->set('terms_per_page_admin', update_variable_get('taxonomy_terms_per_page_admin', 100));
  $config->save();

  update_variable_del('taxonomy_terms_per_page_admin');
}

/**
 * Create the default views for Taxonomy Term pages.
 */
function taxonomy_update_1005() {
  // Term display
  $view_config = array(
    'name' => 'term_display',
    'description' => 'Displays the term discription on the term page.',
    'module' => 'taxonomy',
    'storage' => 4,
    'tag' => 'default',
    'disabled' => false,
    'base_table' => 'taxonomy_term_data',
    'human_name' => 'Term display',
    'core' => '1.0-dev',
    'display' => array(
      'default' => array(
        'display_title' => 'Master',
        'display_plugin' => 'default',
        'display_options' => array(
          'query' => array(
            'type' => 'views_query',
            'options' => array(),
          ),
          'access' => array(
            'type' => 'perm',
            'perm' => 'access content',
          ),
          'cache' => array(
            'type' => 'none',
          ),
          'exposed_form' => array(
            'type' => 'basic',
          ),
          'pager' => array(
            'type' => 'full',
          ),
          'style_plugin' => 'default',
          'row_plugin' => 'fields',
          'fields' => array(
            'description' => array(
              'id' => 'description',
              'table' => 'taxonomy_term_data',
              'field' => 'description',
              'relationship' => 'none',
              'group_type' => 'group',
              'ui_name' => '',
              'label' => '',
              'exclude' => 0,
              'alter' => array(
                'alter_text' => 0,
                'text' => '',
                'make_link' => 0,
                'path' => '',
                'absolute' => 0,
                'external' => 0,
                'replace_spaces' => 0,
                'path_case' => 'none',
                'trim_whitespace' => 0,
                'alt' => '',
                'rel' => '',
                'link_class' => '',
                'prefix' => '',
                'suffix' => '',
                'target' => '',
                'nl2br' => 0,
                'max_length' => '',
                'word_boundary' => 1,
                'ellipsis' => 1,
                'more_link' => 0,
                'more_link_text' => '',
                'more_link_path' => '',
                'strip_tags' => 0,
                'trim' => 0,
                'preserve_tags' => '',
                'html' => 0,
              ),
              'element_type' => '',
              'element_class' => '',
              'element_label_type' => '',
              'element_label_class' => '',
              'element_label_colon' => false,
              'element_wrapper_type' => '',
              'element_wrapper_class' => '',
              'element_default_classes' => 1,
              'empty' => '',
              'hide_empty' => 0,
              'empty_zero' => 0,
              'hide_alter_empty' => 1,
            ),
          ),
          'filters' => array(),
          'sorts' => array(),
          'arguments' => array(
            'tid' => array(
              'id' => 'tid',
              'table' => 'taxonomy_term_data',
              'field' => 'tid',
              'relationship' => 'none',
              'group_type' => 'group',
              'ui_name' => '',
              'default_action' => 'not found',
              'exception' => array(
                'value' => 'all',
                'title_enable' => 0,
                'title' => 'All',
              ),
              'title_enable' => 0,
              'title' => '',
              'breadcrumb_enable' => 0,
              'breadcrumb' => '',
              'default_argument_type' => 'fixed',
              'default_argument_options' => array(
                'argument' => '',
              ),
              'default_argument_skip_url' => 0,
              'summary_options' => array(
                'base_path' => '',
                'count' => '1',
                'items_per_page' => '25',
                'override' => 0,
              ),
              'summary' => array(
                'sort_order' => 'asc',
                'number_of_records' => '0',
                'format' => 'default_summary',
              ),
              'specify_validation' => 1,
              'validate' => array(
                'type' => 'taxonomy_term',
                'fail' => 'not found',
              ),
              'validate_options' => array(
                'type' => 'tid',
                'vocabularies' => array(),
                'transform' => 0,
              ),
              'break_phrase' => 0,
              'not' => 0,
            ),
          ),
          'style_options' => array(
            'grouping' => array(),
            'row_class' => '',
            'default_row_class' => 1,
            'row_class_special' => 1,
          ),
        ),
      ),
      'attachment_1' => array(
        'display_title' => 'Attachment',
        'display_plugin' => 'attachment',
        'display_options' => array(
          'query' => array(
            'type' => 'views_query',
            'options' => array(),
          ),
          'pager' => array(
            'type' => 'some',
            'options' => array(
              'items_per_page' => '1',
              'offset' => '0',
            ),
          ),
        ),
      ),
    ),
  );
  $config = config('views.view.term_display');
  if ($config->isNew()) {
    $config->setData($view_config);
    $config->save();
  }

  // Term page
  $view_config = array(
    'name' => 'term_page',
    'description' => 'Displays a term page along with a list of classified content.',
    'module' => 'taxonomy',
    'storage' => 4,
    'tag' => 'default',
    'disabled' => false,
    'base_table' => 'node',
    'human_name' => 'Term page',
    'core' => '1.0-dev',
    'display' => array(
      'default' => array(
        'display_title' => 'Master',
        'display_plugin' => 'default',
        'display_options' => array(
          'query' => array(
            'type' => 'views_query',
            'options' => array(
              'query_comment' => false,
            ),
          ),
          'access' => array(
            'type' => 'perm',
            'perm' => 'access content',
          ),
          'cache' => array(
            'type' => 'none',
          ),
          'exposed_form' => array(
            'type' => 'basic',
          ),
          'pager' => array(
            'type' => 'full',
            'options' => array(
              'items_per_page' => '10',
              'offset' => '0',
              'id' => '0',
              'total_pages' => '',
              'quantity' => '9',
              'tags' => array(
                'first' => '« first',
                'previous' => '‹ previous',
                'next' => 'next ›',
                'last' => 'last »',
              ),
              'expose' => array(
                'items_per_page' => 0,
                'items_per_page_label' => 'Items per page',
                'items_per_page_options' => '5, 10, 20, 40, 60',
                'items_per_page_options_all' => 0,
                'items_per_page_options_all_label' => '- All -',
                'offset' => 0,
                'offset_label' => 'Offset',
              ),
            ),
          ),
          'style_plugin' => 'default',
          'row_plugin' => 'node',
          'sorts' => array(
            'sticky' => array(
              'id' => 'sticky',
              'table' => 'node',
              'field' => 'sticky',
              'order' => 'DESC',
            ),
            'created' => array(
              'id' => 'created',
              'table' => 'node',
              'field' => 'created',
              'order' => 'DESC',
            ),
          ),
          'arguments' => array(
            'tid' => array(
              'id' => 'tid',
              'table' => 'taxonomy_index',
              'field' => 'tid',
              'relationship' => 'none',
              'group_type' => 'group',
              'ui_name' => '',
              'default_action' => 'not found',
              'exception' => array(
                'value' => 'all',
                'title_enable' => 0,
                'title' => 'All',
              ),
              'title_enable' => 1,
              'title' => '%1',
              'breadcrumb_enable' => 0,
              'breadcrumb' => '',
              'default_argument_type' => 'fixed',
              'default_argument_options' => array(
                'argument' => '',
              ),
              'default_argument_skip_url' => 0,
              'summary_options' => array(
                'base_path' => '',
                'count' => '1',
                'items_per_page' => '25',
                'override' => 0,
              ),
              'summary' => array(
                'sort_order' => 'asc',
                'number_of_records' => '0',
                'format' => 'default_summary',
              ),
              'specify_validation' => 1,
              'validate' => array(
                'type' => 'taxonomy_term',
                'fail' => 'not found',
              ),
              'validate_options' => array(
                'type' => 'tid',
                'vocabularies' => array(),
                'transform' => 0,
              ),
              'break_phrase' => 0,
              'add_table' => 0,
              'require_value' => 0,
              'reduce_duplicates' => 0,
              'set_breadcrumb' => 1,
            ),
          ),
          'filters' => array(
            'status_extra' => array(
              'id' => 'status_extra',
              'table' => 'node',
              'field' => 'status_extra',
              'group' => 0,
              'expose' => array(
                'operator' => false,
              ),
            ),
          ),
          'relationships' => array(),
          'fields' => array(),
          'title' => 'Taxonomy term',
          'header' => array(
            'view' => array(
              'id' => 'view',
              'table' => 'views',
              'field' => 'view',
              'relationship' => 'none',
              'group_type' => 'group',
              'ui_name' => '',
              'label' => '',
              'empty' => 1,
              'view_to_insert' => 'term_display:attachment_1',
              'inherit_arguments' => 1,
            ),
          ),
          'empty' => array(
            'area' => array(
              'id' => 'area',
              'table' => 'views',
              'field' => 'area',
              'relationship' => 'none',
              'group_type' => 'group',
              'ui_name' => '',
              'label' => '',
              'empty' => true,
              'content' => 'There is currently no content classified with this term.',
              'format' => 'filtered_html',
              'tokenize' => 0,
            ),
          ),
        ),
      ),
      'page' => array(
        'display_title' => 'Page',
        'display_plugin' => 'page',
        'display_options' => array(
          'query' => array(
            'type' => 'views_query',
            'options' => array(),
          ),
          'path' => 'taxonomy/term/%',
        ),
      ),
      'feed' => array(
        'display_title' => 'Feed',
        'display_plugin' => 'feed',
        'display_options' => array(
          'query' => array(
            'type' => 'views_query',
            'options' => array(),
          ),
          'pager' => array(
            'type' => 'some',
            'options' => array(
              'items_per_page' => '10',
              'offset' => '0',
            ),
          ),
          'style_plugin' => 'rss',
          'row_plugin' => 'node_rss',
          'path' => 'taxonomy/term/%/feed',
          'displays' => array(
            'page' => 'page',
            'default' => 0,
          ),
          'header' => array(),
          'defaults' => array(
            'header' => false,
            'pager' => false,
            'pager_options' => false,
          ),
          'pager_options' => NULL,
        ),
      ),
    ),
  );
  $config = config('views.view.term_page');
  if ($config->isNew()) {
    $config->setData($view_config);
    $config->save();
  }
}

/**
 * @} End of "addtogroup updates-7.x-to-1.x"
 * The next series of updates should start at 2000.
 */
