diff --git a/field_group.js b/field_group.js
old mode 100644
new mode 100755
index 5832aa1..d4e9762
--- a/field_group.js
+++ b/field_group.js
@@ -38,24 +38,29 @@ Drupal.FieldGroup.Effects.processFieldset = {
  */
 Drupal.FieldGroup.Effects.processAccordion = {
   execute: function (context, settings, type) {
-    var accordions = $('div.field-group-accordion-wrapper', context).accordion({
-      autoHeight: false,
-      active: '.field-group-accordion-active',
-      collapsible: true
-    });
-    if (type == 'form') {
-      // Add required fields mark to any element containing required fields
-      $('div.accordion-item').each(function(i){
-        if ($(this).is('.required-fields') && $(this).find('.form-required').length > 0) {
-          $('h3.ui-accordion-header').eq(i).append(' ').append($('.form-required').eq(0).clone());
-        }
-        if ($('.error', $(this)).length) {
-          $('h3.ui-accordion-header').eq(i).addClass('error');
-          var activeOne = $(this).parent().accordion("activate" , i);
-          $('.ui-accordion-content-active', activeOne).css({height: 'auto', width: 'auto', display: 'block'});
-        }
+    $('div.field-group-accordion-wrapper', context).once('fieldgroup-effects', function () {
+      var wrapper = $(this);
+      
+      wrapper.accordion({
+        autoHeight: false,
+        active: '.field-group-accordion-active',
+        collapsible: true
       });
-    }
+        
+      if (type == 'form') {
+        // Add required fields mark to any element containing required fields
+        wrapper.find('div.accordion-item').each(function(i){
+          if ($(this).is('.required-fields') && $(this).find('.form-required').length > 0) {
+            $('h3.ui-accordion-header').eq(i).append(' ').append($('.form-required').eq(0).clone());
+          }
+          if ($('.error', $(this)).length) {
+            $('h3.ui-accordion-header').eq(i).addClass('error');
+            var activeOne = $(this).parent().accordion("activate" , i);
+            $('.ui-accordion-content-active', activeOne).css({height: 'auto', width: 'auto', display: 'block'});
+          }
+        });
+      }
+    });
   }
 }
 
@@ -153,16 +158,15 @@ Drupal.behaviors.fieldGroup = {
     if (settings.field_group == undefined) {
       return;
     }
-    $('body', context).once('fieldgroup-effects', function () {
-      // Execute all of them.
-      $.each(Drupal.FieldGroup.Effects, function (func) {
-        // We check for a wrapper function in Drupal.field_group as 
-        // alternative for dynamic string function calls.
-        var type = func.toLowerCase().replace("process", "");
-        if (settings.field_group[type] != undefined && $.isFunction(this.execute)) {
-          this.execute(context, settings, settings.field_group[type]);
-        }
-      });
+    
+    // Execute all of them.
+    $.each(Drupal.FieldGroup.Effects, function (func) {
+      // We check for a wrapper function in Drupal.field_group as 
+      // alternative for dynamic string function calls.
+      var type = func.toLowerCase().replace("process", "");
+      if (settings.field_group[type] != undefined && $.isFunction(this.execute)) {
+        this.execute(context, settings, settings.field_group[type]);
+      }
     });
 
     // Fixes css for fieldgroups under vertical tabs.
